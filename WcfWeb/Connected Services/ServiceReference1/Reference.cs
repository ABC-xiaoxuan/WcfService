//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfWeb.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        bool Register(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Register", ReplyAction="http://tempuri.org/IService1/RegisterResponse")]
        System.Threading.Tasks.Task<bool> RegisterAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        WcfService.User Login(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Login", ReplyAction="http://tempuri.org/IService1/LoginResponse")]
        System.Threading.Tasks.Task<WcfService.User> LoginAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBooks", ReplyAction="http://tempuri.org/IService1/GetAllBooksResponse")]
        WcfService.Book[] GetAllBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllBooks", ReplyAction="http://tempuri.org/IService1/GetAllBooksResponse")]
        System.Threading.Tasks.Task<WcfService.Book[]> GetAllBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddToCart", ReplyAction="http://tempuri.org/IService1/AddToCartResponse")]
        void AddToCart(int userId, WcfService.CartItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddToCart", ReplyAction="http://tempuri.org/IService1/AddToCartResponse")]
        System.Threading.Tasks.Task AddToCartAsync(int userId, WcfService.CartItem item);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBookToCart", ReplyAction="http://tempuri.org/IService1/AddBookToCartResponse")]
        void AddBookToCart(int userId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AddBookToCart", ReplyAction="http://tempuri.org/IService1/AddBookToCartResponse")]
        System.Threading.Tasks.Task AddBookToCartAsync(int userId, int bookId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePassword", ReplyAction="http://tempuri.org/IService1/ChangePasswordResponse")]
        bool ChangePassword(string username, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ChangePassword", ReplyAction="http://tempuri.org/IService1/ChangePasswordResponse")]
        System.Threading.Tasks.Task<bool> ChangePasswordAsync(string username, string oldPassword, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdminLogin", ReplyAction="http://tempuri.org/IService1/AdminLoginResponse")]
        bool AdminLogin(string adminName, string adminPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/AdminLogin", ReplyAction="http://tempuri.org/IService1/AdminLoginResponse")]
        System.Threading.Tasks.Task<bool> AdminLoginAsync(string adminName, string adminPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchBooks", ReplyAction="http://tempuri.org/IService1/SearchBooksResponse")]
        WcfService.Book[] SearchBooks(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchBooks", ReplyAction="http://tempuri.org/IService1/SearchBooksResponse")]
        System.Threading.Tasks.Task<WcfService.Book[]> SearchBooksAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        WcfService.User[] GetAllUsers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetAllUsers", ReplyAction="http://tempuri.org/IService1/GetAllUsersResponse")]
        System.Threading.Tasks.Task<WcfService.User[]> GetAllUsersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchUsers", ReplyAction="http://tempuri.org/IService1/SearchUsersResponse")]
        WcfService.User[] SearchUsers(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/SearchUsers", ReplyAction="http://tempuri.org/IService1/SearchUsersResponse")]
        System.Threading.Tasks.Task<WcfService.User[]> SearchUsersAsync(string keyword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        bool DeleteUser(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/DeleteUser", ReplyAction="http://tempuri.org/IService1/DeleteUserResponse")]
        System.Threading.Tasks.Task<bool> DeleteUserAsync(int userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookByID", ReplyAction="http://tempuri.org/IService1/GetBookByIDResponse")]
        WcfService.Book GetBookByID(int bookID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/GetBookByID", ReplyAction="http://tempuri.org/IService1/GetBookByIDResponse")]
        System.Threading.Tasks.Task<WcfService.Book> GetBookByIDAsync(int bookID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : WcfWeb.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<WcfWeb.ServiceReference1.IService1>, WcfWeb.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Register(string username, string password) {
            return base.Channel.Register(username, password);
        }
        
        public System.Threading.Tasks.Task<bool> RegisterAsync(string username, string password) {
            return base.Channel.RegisterAsync(username, password);
        }
        
        public WcfService.User Login(string username, string password) {
            return base.Channel.Login(username, password);
        }
        
        public System.Threading.Tasks.Task<WcfService.User> LoginAsync(string username, string password) {
            return base.Channel.LoginAsync(username, password);
        }
        
        public WcfService.Book[] GetAllBooks() {
            return base.Channel.GetAllBooks();
        }
        
        public System.Threading.Tasks.Task<WcfService.Book[]> GetAllBooksAsync() {
            return base.Channel.GetAllBooksAsync();
        }
        
        public void AddToCart(int userId, WcfService.CartItem item) {
            base.Channel.AddToCart(userId, item);
        }
        
        public System.Threading.Tasks.Task AddToCartAsync(int userId, WcfService.CartItem item) {
            return base.Channel.AddToCartAsync(userId, item);
        }
        
        public void AddBookToCart(int userId, int bookId) {
            base.Channel.AddBookToCart(userId, bookId);
        }
        
        public System.Threading.Tasks.Task AddBookToCartAsync(int userId, int bookId) {
            return base.Channel.AddBookToCartAsync(userId, bookId);
        }
        
        public bool ChangePassword(string username, string oldPassword, string newPassword) {
            return base.Channel.ChangePassword(username, oldPassword, newPassword);
        }
        
        public System.Threading.Tasks.Task<bool> ChangePasswordAsync(string username, string oldPassword, string newPassword) {
            return base.Channel.ChangePasswordAsync(username, oldPassword, newPassword);
        }
        
        public bool AdminLogin(string adminName, string adminPassword) {
            return base.Channel.AdminLogin(adminName, adminPassword);
        }
        
        public System.Threading.Tasks.Task<bool> AdminLoginAsync(string adminName, string adminPassword) {
            return base.Channel.AdminLoginAsync(adminName, adminPassword);
        }
        
        public WcfService.Book[] SearchBooks(string keyword) {
            return base.Channel.SearchBooks(keyword);
        }
        
        public System.Threading.Tasks.Task<WcfService.Book[]> SearchBooksAsync(string keyword) {
            return base.Channel.SearchBooksAsync(keyword);
        }
        
        public WcfService.User[] GetAllUsers() {
            return base.Channel.GetAllUsers();
        }
        
        public System.Threading.Tasks.Task<WcfService.User[]> GetAllUsersAsync() {
            return base.Channel.GetAllUsersAsync();
        }
        
        public WcfService.User[] SearchUsers(string keyword) {
            return base.Channel.SearchUsers(keyword);
        }
        
        public System.Threading.Tasks.Task<WcfService.User[]> SearchUsersAsync(string keyword) {
            return base.Channel.SearchUsersAsync(keyword);
        }
        
        public bool DeleteUser(int userID) {
            return base.Channel.DeleteUser(userID);
        }
        
        public System.Threading.Tasks.Task<bool> DeleteUserAsync(int userID) {
            return base.Channel.DeleteUserAsync(userID);
        }
        
        public WcfService.Book GetBookByID(int bookID) {
            return base.Channel.GetBookByID(bookID);
        }
        
        public System.Threading.Tasks.Task<WcfService.Book> GetBookByIDAsync(int bookID) {
            return base.Channel.GetBookByIDAsync(bookID);
        }
    }
}
